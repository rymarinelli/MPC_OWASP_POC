name: OWASP Top Ten Security Scan

on:
  push:
    branches:
      - main
      - master
      - develop
      - 'release/**'
  pull_request:

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  owasp-top10:
    name: Run OWASP Top Ten Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install security tooling
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade inspect-ai semgrep

      - name: Start Minikube cluster
        uses: medyagh/setup-minikube@latest
        with:
          driver: docker
          kubernetes-version: v1.30.0

      - name: Deploy sandbox workloads into Minikube
        run: |
          set -euo pipefail
          kubectl version --output=yaml
          mkdir -p workloads/manifests
          index_file="workloads/index.html"
          curl -fsSL https://k8s-sandbox.aisi.org.uk/examples/ -o "$index_file"
          grep -oE 'href="[^"]+\.ya?ml"' "$index_file" | sed -E 's/^href="//;s/"$//' | sort -u > workloads/manifest-list.txt
          if [ ! -s workloads/manifest-list.txt ]; then
            echo "No manifests discovered at https://k8s-sandbox.aisi.org.uk/examples/." >&2
            exit 1
          fi
          while IFS= read -r manifest_path; do
            manifest_dir=$(dirname "$manifest_path")
            target_dir="workloads/manifests/$manifest_dir"
            mkdir -p "$target_dir"
            manifest_url="https://k8s-sandbox.aisi.org.uk/examples/$manifest_path"
            manifest_file="$target_dir/$(basename "$manifest_path")"
            echo "Downloading $manifest_url"
            curl -fsSL "$manifest_url" -o "$manifest_file"
            kubectl apply -f "$manifest_file"
          done < workloads/manifest-list.txt
          kubectl get all --all-namespaces

      - name: Run Semgrep OWASP Top Ten ruleset
        id: semgrep
        continue-on-error: true
        run: |
          set -euo pipefail
          semgrep --config "p/owasp-top-ten" --json --output semgrep-report.json

      - name: Evaluate Semgrep findings
        id: semgrep_eval
        run: python scripts/evaluate_semgrep.py

      - name: Fail on Semgrep findings
        if: steps.semgrep_eval.outputs.findings != '0'
        run: |
          echo "Semgrep detected OWASP Top Ten violations."
          exit 1

      - name: Run Inspect AI analyses
        id: inspect
        continue-on-error: true
        run: |
          set -euo pipefail
          inspect_ai scan owasp-top-ten --format json --output inspect-report.json

      - name: Evaluate Inspect AI findings
        id: inspect_eval
        run: python scripts/evaluate_inspect.py

      - name: Fail on Inspect AI findings
        if: steps.inspect_eval.outputs.findings != '0'
        run: |
          echo "Inspect AI detected OWASP Top Ten vulnerabilities."
          exit 1

      - name: Build combined security summary
        id: summary
        run: python scripts/build_security_summary.py

      - name: Upload security artifacts
        uses: actions/upload-artifact@v4
        with:
          name: owasp-top10-artifacts
          path: |
            semgrep-report.json
            inspect-report.json
            security-summary.md
            workloads/
          if-no-files-found: error

      - name: Comment on pull request with findings
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const summaryPath = path.join(process.env.GITHUB_WORKSPACE, 'security-summary.md');
            let body = 'OWASP Top Ten scan completed, but no summary available.';
            if (fs.existsSync(summaryPath)) {
              body = fs.readFileSync(summaryPath, 'utf-8');
            }
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `## OWASP Top Ten Scan\n\n${body}\n\nArtifacts containing detailed reports have been uploaded with this run.`
            });

      - name: Final status
        run: echo "OWASP Top Ten scan workflow completed."
